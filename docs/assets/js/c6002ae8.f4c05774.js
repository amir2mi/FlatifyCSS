"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[527],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),o=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},d=function(e){var t=o(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=o(n),h=i,u=m["".concat(l,".").concat(h)]||m[h]||c[h]||s;return n?r.createElement(u,a(a({ref:t},d),{},{components:n})):r.createElement(u,a({ref:t},d))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=n.length,a=new Array(s);a[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,a[1]=p;for(var o=2;o<s;o++)a[o]=n[o];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2695:function(e,t,n){n.d(t,{Z:function(){return p}});var r=n(7462),i=n(3366),s=n(7294),a=["children"];function p(e){var t=e.children,n=(0,i.Z)(e,a);return s.createElement("iframe",(0,r.Z)({width:"100%",className:"docus-preview-box",srcDoc:t},n))}},3899:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return o},metadata:function(){return d},toc:function(){return c},default:function(){return h}});var r=n(7462),i=n(3366),s=(n(7294),n(3905)),a=n(2695),p=["components"],l={title:"Width setters"},o=void 0,d={unversionedId:"helpers/width-setters",id:"helpers/width-setters",isDocsHomePage:!1,title:"Width setters",description:"Width setters help you set width for elements, it is defined in _config.scss file, so you can add more setter classes with custom values.",source:"@site/docs/helpers/width-setters.mdx",sourceDirName:"helpers",slug:"/helpers/width-setters",permalink:"/flatifycss/docs/helpers/width-setters",editUrl:"https://github.com/amir2mi/flatifycss/tree/master/website/docs/helpers/width-setters.mdx",tags:[],version:"current",frontMatter:{title:"Width setters"},sidebar:"tutorialSidebar",previous:{title:"Size setters",permalink:"/flatifycss/docs/helpers/size-setters"}},c=[],m={toc:c};function h(e){var t=e.components,n=(0,i.Z)(e,p);return(0,s.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Width setters help you set width for elements, it is defined in ",(0,s.kt)("inlineCode",{parentName:"p"},"_config.scss")," file, so you can add more setter classes with custom values."),(0,s.kt)(a.Z,{height:"320px",children:'\n<!DOCTYPE html>\n<html lang="en"> <head> <meta charset="UTF-8" /> <meta http-equiv="X-UA-Compatible" content="IE=edge" /> <meta name="viewport" content="width=device-width, initial-scale=1.0" /> <link rel="stylesheet" href="https://raw.githack.com/amir2mi/FlatifyCSS/master/dist/css/flatify-min.css" /> <title>Width setters</title> <style> .my-box{ height: 30px; padding: 5px 10px; margin: 20px 0; border-radius: 12px; } </style> </head> <body> <div class="my-box style-blue width-100p">100%</div> <div class="my-box style-green width-75p">75%</div> <div class="my-box style-purple width-50p">50%</div> <div class="my-box style-orange width-25p">25%</div> <div class="my-box style-red width-10p">10%</div> </body>\n</html>\n',mdxType:"PreviewBox"}),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},'<div class="my-box style-blue width-100p">100%</div>\n<div class="my-box style-green width-75p">75%</div>\n<div class="my-box style-purple width-50p">50%</div>\n<div class="my-box style-orange width-25p">25%</div>\n<div class="my-box style-red width-10p">10%</div>\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="style.css"',title:'"style.css"'},".my-box {\n    height: 30px;\n    padding: 5px 10px;\n    margin: 20px 0;\n    border-radius: 12px;\n}\n")),(0,s.kt)("p",null,"Predefined classes are here:",(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-0p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-10p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-15p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-25p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-30p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-50p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-60p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-75p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-90p"),(0,s.kt)("br",{parentName:"p"}),"\n",(0,s.kt)("inlineCode",{parentName:"p"},"width-100p")),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Custom helper classes")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Note that these classes can be customized in ",(0,s.kt)("inlineCode",{parentName:"p"},"_config.scss")," file, there is a variable called ",(0,s.kt)("inlineCode",{parentName:"p"},"$WIDTH_LIST"),",\nall classes are generated from this list.\nSo it is possible to create customized helper classes for width simply!"))),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-scss",metastring:'{14,15} title="_config.scss"',"{14,15}":!0,title:'"_config.scss"'},"// This list will be converted to helper classes.\n// .width-[]\n$WIDTH_LIST: (\n    0p: 0,\n    10p: 10%,\n    15p: 15%,\n    25p: 25%,\n    30p: 30%,\n    50p: 50%,\n    60p: 60%,\n    75p: 75%,\n    90p: 90%,\n    100p: 100%,\n    50-pixels: 50px,\n    5-em: 5em,\n);\n")))}h.isMDXComponent=!0}}]);