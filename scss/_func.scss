@function tint($color, $percentage) {
	@return mix(#fff, $color, $percentage);
}

@function shade($color, $percentage) {
	@return mix(#000, $color, $percentage);
}

// Responsive breakpoints media query
@mixin break-xs() {
	$xs-bp: map-get($RESPONSIVE_BREAKPOINTS, "xs");
	@media screen and (max-width: $xs-bp) {
		@content;
	}
}

@mixin break-sm() {
	$sm-bp: map-get($RESPONSIVE_BREAKPOINTS, "sm");
	$md-bp: map-get($RESPONSIVE_BREAKPOINTS, "md");
	@media screen and (min-width: $sm-bp) and (max-width: $md-bp - 1px) {
		@content;
	}
}

@mixin break-md() {
	$md-bp: map-get($RESPONSIVE_BREAKPOINTS, "md");
	$lg-bp: map-get($RESPONSIVE_BREAKPOINTS, "lg");
	@media screen and (min-width: $md-bp) and (max-width: $lg-bp - 1px) {
		@content;
	}
}

@mixin break-lg() {
	$lg-bp: map-get($RESPONSIVE_BREAKPOINTS, "lg");
	$xl-bp: map-get($RESPONSIVE_BREAKPOINTS, "xl");
	@media screen and (min-width: $lg-bp) and (max-width: $xl-bp - 1px) {
		@content;
	}
}

@mixin break-xl() {
	$xl-bp: map-get($RESPONSIVE_BREAKPOINTS, "xl");
	$xxl-bp: map-get($RESPONSIVE_BREAKPOINTS, "xxl");
	@media screen and (min-width: $xl-bp) and (max-width: $xxl-bp - 1px) {
		@content;
	}
}

@mixin break-xxl() {
	$xxl-bp: map-get($RESPONSIVE_BREAKPOINTS, "xxl");
	@media screen and(min-width: $xxl-bp) {
		@content;
	}
}
