// *** Document
*,
*::before,
*::after {
	box-sizing: border-box;
}

// *** Root
:root {
	@media (max-width: 575.98px) {
		font-size: var(--#{$CSS_VAR_PFX}min-font-size-with-unit);
	}

	@media (min-width: 576px) and (max-width: 1200px) {
		font-size: #{"calc( var(--#{$CSS_VAR_PFX}min-font-size-with-unit) + ( var(--#{$CSS_VAR_PFX}max-font-size) - var(--#{$CSS_VAR_PFX}min-font-size) ) * ( ( 100vw - 575px ) / ( 1200 - 575 ) ) )"};
	}

	@media (min-width: 1200px) {
		font-size: var(--#{$CSS_VAR_PFX}max-font-size-with-unit);
	}

	@if $SUPPORT_SMOOTH_SCROLL {
		@media (prefers-reduced-motion: no-preference) {
			scroll-behavior: smooth;
		}
	}
}

// *** Body
body {
	margin: 0;
	font-family: var(--#{$CSS_VAR_PFX}primary-font-family);
	line-height: var(--#{$CSS_VAR_PFX}base-line-height);
	text-align: var(--#{$CSS_VAR_PFX}body-text-align);
	color: var(--#{$CSS_VAR_PFX}txt-color);
	background-color: var(--#{$CSS_VAR_PFX}bg-color);
	-webkit-text-size-adjust: 100%;
	-webkit-tap-highlight-color: var(--#{$CSS_VAR_PFX}tap-highlight-color);
	text-rendering: optimizeLegibility;

	@if not $SUPPORT_LTR {
		direction: rtl;
	}
}

// *** Reset
// hr: default, dots, short
hr {
	margin: 1em 0;
	opacity: 0.5;
	color: currentColor;
	background-color: currentColor;
	border: none;

	&:not([size]) {
		height: var(--#{$CSS_VAR_PFX}border-width);
	}

	&.dots {
		line-height: 1;
		display: block;
		height: auto;
		padding: 2em;
		text-align: center;
		background: transparent;

		&:before {
			content: "‌•••";
			letter-spacing: 1.4em;
			font-size: 1.4em;
			font-weight: bold;
		}
	}

	&.short {
		width: 9em;
		margin: 3em auto;
	}
}

// *** Typography
%heading {
	margin-top: 0;
	margin-bottom: var(--#{$CSS_VAR_PFX}heading-mb);
	font-family: var(--#{$CSS_VAR_PFX}heading-font-family, --#{$CSS_VAR_PFX}primary-font-family);
	font-style: var(--#{$CSS_VAR_PFX}heading-font-style);
	font-weight: var(--#{$CSS_VAR_PFX}heading-font-weight);
	color: var(--#{$CSS_VAR_PFX}heading-color);
}

h1 {
	@extend %heading;
	font-size: 3.5em;
	line-height: var(--#{$CSS_VAR_PFX}small-line-height);
}

h2 {
	@extend %heading;
	font-size: 3em;
	line-height: var(--#{$CSS_VAR_PFX}small-line-height);
}

h3 {
	@extend %heading;
	font-size: 2.35em;
	line-height: var(--#{$CSS_VAR_PFX}small-line-height);
}

h4 {
	@extend %heading;
	font-size: 2em;
	line-height: var(--#{$CSS_VAR_PFX}base-line-height);
}

h5 {
	@extend %heading;
	font-size: 1.65em;
	line-height: var(--#{$CSS_VAR_PFX}base-line-height);
}

h6 {
	@extend %heading;
	font-size: 1.35em;
	line-height: var(--#{$CSS_VAR_PFX}base-line-height);
}

p {
	line-height: var(--#{$CSS_VAR_PFX}large-line-height);
	margin-top: 0;
	margin-bottom: var(--#{$CSS_VAR_PFX}paragraph-mb);

	// last p in the parent should not have margin e.g. the paragraph in a button
	&:last-of-type {
		margin-bottom: 0;
	}
}

abbr[title] {
	cursor: help;
	text-decoration: var(--#{$CSS_VAR_PFX}txt-color-light) underline dotted 0.125em;
	text-decoration-skip-ink: none;
}

address {
	margin-bottom: 1em;
	font-style: normal;
	line-height: inherit;
}

// *** Lists
ol,
ul {
	padding-left: 2em;
}

ol,
ul,
dl {
	margin-top: 0;
	margin-bottom: 1em;
}

ol ol,
ul ul,
ol ul,
ul ol {
	margin-bottom: 0;
}

dt {
	font-weight: var(--#{$CSS_VAR_PFX}medium-font-weight);
}

dd {
	margin-bottom: 0.5em;
	margin-left: 0;
}

:root {
	--#{$CSS_VAR_PFX}blockquote-accent-color: var(--#{$CSS_VAR_PFX}color-accent-primary);
}

blockquote {
	line-height: var(--#{$CSS_VAR_PFX}large-line-height);
	margin: 0 0 var(--#{$CSS_VAR_PFX}paragraph-mb);
	border-radius: 0.25em;
	border-style: solid;
	border-color: var(--#{$CSS_VAR_PFX}blockquote-accent-color);

	@if $SUPPORT_LTR {
		border-width: 0 0 0 0.5em;
	} @else {
		border-width: 0 0.5em 0 0;
	}

	&:not(.large) {
		font-size: 1em;
		line-height: var(--#{$CSS_VAR_PFX}large-line-height);
		padding: 0.75em 1.25em;
	}

	&.large {
		font-size: 1.25em;
		border-width: 0.5em 0;
		padding: 1.25em 0.75em;
		cite {
			padding-top: 1.25em;
		}
	}

	&.large:not(.text-align-fill) {
		text-align: center;
	}

	cite {
		display: block;
		font-size: 0.64em;
		font-style: normal;
		letter-spacing: 0.18em;
		text-transform: uppercase;
		padding-top: 0.5em;
		opacity: 0.8;
	}
}

// *** Text formatting
b,
strong {
	font-weight: var(--#{$CSS_VAR_PFX}bold-font-weight);
}

mark {
	color: var(--#{$CSS_VAR_PFX}text-color-darker);

	&:not(.inline) {
		border-radius: 0.38em;
		padding: 0 0.32em;
		background: var(--#{$CSS_VAR_PFX}yellow-light);
	}

	&.inline {
		position: relative;
		white-space: nowrap;
		margin: 0 0.32em;
		background: transparent;

		&:before {
			content: " ";
			position: absolute;
			top: 0;
			left: 0;
			z-index: -1;
			width: 100%;
			height: 100%;
			background: var(--#{$CSS_VAR_PFX}yellow-light);
			border-radius: 0.38em;
			opacity: 0.9;

			@if $SUPPORT_LTR {
				transform: rotate(-3deg) scale(1.05, 0.9) skew(-10deg);
			} @else {
				transform: rotate(3deg) scale(1.05, 0.9) skew(10deg);
			}
		}
	}

	// color: var(--#{$CSS_VAR_PFX}txt-color-inverted);
}

// Sub & Sup
sub,
sup {
	position: relative;
	font-size: 0.75em;
	line-height: 0;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}
sup {
	top: -0.5em;
}

// Anchor
a[href] {
	color: var(--#{$CSS_VAR_PFX}link-color);
	text-decoration: var(--#{$CSS_VAR_PFX}link-decoration);
	transition: all var(--#{$CSS_VAR_PFX}simple-transition);

	&:hover {
		color: var(--#{$CSS_VAR_PFX}link-color__hover);
		text-decoration: var(--#{$CSS_VAR_PFX}link-decoration__hover);
	}

	&:focus {
		color: var(--#{$CSS_VAR_PFX}link-color__focus);
		text-decoration: var(--#{$CSS_VAR_PFX}link-decoration__focus);
	}
}

// Code
pre,
code,
kbd,
samp {
	direction: ltr;
	unicode-bidi: bidi-override;
	font-size: 1em;
	font-family: var(--#{$CSS_VAR_PFX}code-font-family);
}

pre {
	overflow: auto;
	display: block;
	margin-top: 0;
	margin-bottom: 1em;

	code {
		color: inherit;
		word-break: normal;
	}
}

code {
	font-size: 0.9em;
	word-wrap: break-word;

	a > & {
		color: inherit;
	}
}

// Media
img,
svg {
	vertical-align: middle;
}
